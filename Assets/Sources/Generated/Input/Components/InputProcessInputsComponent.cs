//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public ProcessInputsComponent processInputs { get { return (ProcessInputsComponent)GetComponent(InputComponentsLookup.ProcessInputs); } }
    public bool hasProcessInputs { get { return HasComponent(InputComponentsLookup.ProcessInputs); } }

    public void AddProcessInputs(ulong newStartTick) {
        var index = InputComponentsLookup.ProcessInputs;
        var component = CreateComponent<ProcessInputsComponent>(index);
        component.startTick = newStartTick;
        AddComponent(index, component);
    }

    public void ReplaceProcessInputs(ulong newStartTick) {
        var index = InputComponentsLookup.ProcessInputs;
        var component = CreateComponent<ProcessInputsComponent>(index);
        component.startTick = newStartTick;
        ReplaceComponent(index, component);
    }

    public void RemoveProcessInputs() {
        RemoveComponent(InputComponentsLookup.ProcessInputs);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherProcessInputs;

    public static Entitas.IMatcher<InputEntity> ProcessInputs {
        get {
            if (_matcherProcessInputs == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.ProcessInputs);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherProcessInputs = matcher;
            }

            return _matcherProcessInputs;
        }
    }
}
