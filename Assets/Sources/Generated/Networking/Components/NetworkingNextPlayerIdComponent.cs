//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NetworkingContext {

    public NetworkingEntity nextPlayerIdEntity { get { return GetGroup(NetworkingMatcher.NextPlayerId).GetSingleEntity(); } }
    public NextPlayerIdComponent nextPlayerId { get { return nextPlayerIdEntity.nextPlayerId; } }
    public bool hasNextPlayerId { get { return nextPlayerIdEntity != null; } }

    public NetworkingEntity SetNextPlayerId(int newValue) {
        if (hasNextPlayerId) {
            throw new Entitas.EntitasException("Could not set NextPlayerId!\n" + this + " already has an entity with NextPlayerIdComponent!",
                "You should check if the context already has a nextPlayerIdEntity before setting it or use context.ReplaceNextPlayerId().");
        }
        var entity = CreateEntity();
        entity.AddNextPlayerId(newValue);
        return entity;
    }

    public void ReplaceNextPlayerId(int newValue) {
        var entity = nextPlayerIdEntity;
        if (entity == null) {
            entity = SetNextPlayerId(newValue);
        } else {
            entity.ReplaceNextPlayerId(newValue);
        }
    }

    public void RemoveNextPlayerId() {
        nextPlayerIdEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NetworkingEntity {

    public NextPlayerIdComponent nextPlayerId { get { return (NextPlayerIdComponent)GetComponent(NetworkingComponentsLookup.NextPlayerId); } }
    public bool hasNextPlayerId { get { return HasComponent(NetworkingComponentsLookup.NextPlayerId); } }

    public void AddNextPlayerId(int newValue) {
        var index = NetworkingComponentsLookup.NextPlayerId;
        var component = CreateComponent<NextPlayerIdComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceNextPlayerId(int newValue) {
        var index = NetworkingComponentsLookup.NextPlayerId;
        var component = CreateComponent<NextPlayerIdComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveNextPlayerId() {
        RemoveComponent(NetworkingComponentsLookup.NextPlayerId);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class NetworkingMatcher {

    static Entitas.IMatcher<NetworkingEntity> _matcherNextPlayerId;

    public static Entitas.IMatcher<NetworkingEntity> NextPlayerId {
        get {
            if (_matcherNextPlayerId == null) {
                var matcher = (Entitas.Matcher<NetworkingEntity>)Entitas.Matcher<NetworkingEntity>.AllOf(NetworkingComponentsLookup.NextPlayerId);
                matcher.componentNames = NetworkingComponentsLookup.componentNames;
                _matcherNextPlayerId = matcher;
            }

            return _matcherNextPlayerId;
        }
    }
}
