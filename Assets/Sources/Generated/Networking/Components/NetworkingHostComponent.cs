//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NetworkingContext {

    public NetworkingEntity hostEntity { get { return GetGroup(NetworkingMatcher.Host).GetSingleEntity(); } }
    public HostComponent host { get { return hostEntity.host; } }
    public bool hasHost { get { return hostEntity != null; } }

    public NetworkingEntity SetHost(int newId) {
        if (hasHost) {
            throw new Entitas.EntitasException("Could not set Host!\n" + this + " already has an entity with HostComponent!",
                "You should check if the context already has a hostEntity before setting it or use context.ReplaceHost().");
        }
        var entity = CreateEntity();
        entity.AddHost(newId);
        return entity;
    }

    public void ReplaceHost(int newId) {
        var entity = hostEntity;
        if (entity == null) {
            entity = SetHost(newId);
        } else {
            entity.ReplaceHost(newId);
        }
    }

    public void RemoveHost() {
        hostEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NetworkingEntity {

    public HostComponent host { get { return (HostComponent)GetComponent(NetworkingComponentsLookup.Host); } }
    public bool hasHost { get { return HasComponent(NetworkingComponentsLookup.Host); } }

    public void AddHost(int newId) {
        var index = NetworkingComponentsLookup.Host;
        var component = CreateComponent<HostComponent>(index);
        component.id = newId;
        AddComponent(index, component);
    }

    public void ReplaceHost(int newId) {
        var index = NetworkingComponentsLookup.Host;
        var component = CreateComponent<HostComponent>(index);
        component.id = newId;
        ReplaceComponent(index, component);
    }

    public void RemoveHost() {
        RemoveComponent(NetworkingComponentsLookup.Host);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class NetworkingMatcher {

    static Entitas.IMatcher<NetworkingEntity> _matcherHost;

    public static Entitas.IMatcher<NetworkingEntity> Host {
        get {
            if (_matcherHost == null) {
                var matcher = (Entitas.Matcher<NetworkingEntity>)Entitas.Matcher<NetworkingEntity>.AllOf(NetworkingComponentsLookup.Host);
                matcher.componentNames = NetworkingComponentsLookup.componentNames;
                _matcherHost = matcher;
            }

            return _matcherHost;
        }
    }
}
