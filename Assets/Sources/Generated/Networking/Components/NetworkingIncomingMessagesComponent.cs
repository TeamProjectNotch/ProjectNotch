//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NetworkingEntity {

    public IncomingMessagesComponent incomingMessages { get { return (IncomingMessagesComponent)GetComponent(NetworkingComponentsLookup.IncomingMessages); } }
    public bool hasIncomingMessages { get { return HasComponent(NetworkingComponentsLookup.IncomingMessages); } }

    public void AddIncomingMessages(System.Collections.Generic.Queue<INetworkMessage> newQueue) {
        var index = NetworkingComponentsLookup.IncomingMessages;
        var component = CreateComponent<IncomingMessagesComponent>(index);
        component.queue = newQueue;
        AddComponent(index, component);
    }

    public void ReplaceIncomingMessages(System.Collections.Generic.Queue<INetworkMessage> newQueue) {
        var index = NetworkingComponentsLookup.IncomingMessages;
        var component = CreateComponent<IncomingMessagesComponent>(index);
        component.queue = newQueue;
        ReplaceComponent(index, component);
    }

    public void RemoveIncomingMessages() {
        RemoveComponent(NetworkingComponentsLookup.IncomingMessages);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class NetworkingMatcher {

    static Entitas.IMatcher<NetworkingEntity> _matcherIncomingMessages;

    public static Entitas.IMatcher<NetworkingEntity> IncomingMessages {
        get {
            if (_matcherIncomingMessages == null) {
                var matcher = (Entitas.Matcher<NetworkingEntity>)Entitas.Matcher<NetworkingEntity>.AllOf(NetworkingComponentsLookup.IncomingMessages);
                matcher.componentNames = NetworkingComponentsLookup.componentNames;
                _matcherIncomingMessages = matcher;
            }

            return _matcherIncomingMessages;
        }
    }
}
