//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NetworkingEntity {

    public EntitiesToSendComponent entitiesToSend { get { return (EntitiesToSendComponent)GetComponent(NetworkingComponentsLookup.EntitiesToSend); } }
    public bool hasEntitiesToSend { get { return HasComponent(NetworkingComponentsLookup.EntitiesToSend); } }

    public void AddEntitiesToSend(System.Collections.Generic.HashSet<ChangedEntityRecord> newRecords) {
        var index = NetworkingComponentsLookup.EntitiesToSend;
        var component = CreateComponent<EntitiesToSendComponent>(index);
        component.records = newRecords;
        AddComponent(index, component);
    }

    public void ReplaceEntitiesToSend(System.Collections.Generic.HashSet<ChangedEntityRecord> newRecords) {
        var index = NetworkingComponentsLookup.EntitiesToSend;
        var component = CreateComponent<EntitiesToSendComponent>(index);
        component.records = newRecords;
        ReplaceComponent(index, component);
    }

    public void RemoveEntitiesToSend() {
        RemoveComponent(NetworkingComponentsLookup.EntitiesToSend);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class NetworkingMatcher {

    static Entitas.IMatcher<NetworkingEntity> _matcherEntitiesToSend;

    public static Entitas.IMatcher<NetworkingEntity> EntitiesToSend {
        get {
            if (_matcherEntitiesToSend == null) {
                var matcher = (Entitas.Matcher<NetworkingEntity>)Entitas.Matcher<NetworkingEntity>.AllOf(NetworkingComponentsLookup.EntitiesToSend);
                matcher.componentNames = NetworkingComponentsLookup.componentNames;
                _matcherEntitiesToSend = matcher;
            }

            return _matcherEntitiesToSend;
        }
    }
}
