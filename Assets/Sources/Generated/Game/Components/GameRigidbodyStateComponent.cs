//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RigidbodyStateComponent rigidbodyState { get { return (RigidbodyStateComponent)GetComponent(GameComponentsLookup.RigidbodyState); } }
    public bool hasRigidbodyState { get { return HasComponent(GameComponentsLookup.RigidbodyState); } }

    public void AddRigidbodyState(RigidbodyState newState) {
        var index = GameComponentsLookup.RigidbodyState;
        var component = CreateComponent<RigidbodyStateComponent>(index);
        component.state = newState;
        AddComponent(index, component);
    }

    public void ReplaceRigidbodyState(RigidbodyState newState) {
        var index = GameComponentsLookup.RigidbodyState;
        var component = CreateComponent<RigidbodyStateComponent>(index);
        component.state = newState;
        ReplaceComponent(index, component);
    }

    public void RemoveRigidbodyState() {
        RemoveComponent(GameComponentsLookup.RigidbodyState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRigidbodyState;

    public static Entitas.IMatcher<GameEntity> RigidbodyState {
        get {
            if (_matcherRigidbodyState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RigidbodyState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRigidbodyState = matcher;
            }

            return _matcherRigidbodyState;
        }
    }
}
