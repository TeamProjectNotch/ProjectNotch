//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public NetworkUpdatePriorityComponent networkUpdatePriority { get { return (NetworkUpdatePriorityComponent)GetComponent(GameComponentsLookup.NetworkUpdatePriority); } }
    public bool hasNetworkUpdatePriority { get { return HasComponent(GameComponentsLookup.NetworkUpdatePriority); } }

    public void AddNetworkUpdatePriority(int newBasePriority, int newAccumulated) {
        var index = GameComponentsLookup.NetworkUpdatePriority;
        var component = CreateComponent<NetworkUpdatePriorityComponent>(index);
        component.basePriority = newBasePriority;
        component.accumulated = newAccumulated;
        AddComponent(index, component);
    }

    public void ReplaceNetworkUpdatePriority(int newBasePriority, int newAccumulated) {
        var index = GameComponentsLookup.NetworkUpdatePriority;
        var component = CreateComponent<NetworkUpdatePriorityComponent>(index);
        component.basePriority = newBasePriority;
        component.accumulated = newAccumulated;
        ReplaceComponent(index, component);
    }

    public void RemoveNetworkUpdatePriority() {
        RemoveComponent(GameComponentsLookup.NetworkUpdatePriority);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherNetworkUpdatePriority;

    public static Entitas.IMatcher<GameEntity> NetworkUpdatePriority {
        get {
            if (_matcherNetworkUpdatePriority == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.NetworkUpdatePriority);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherNetworkUpdatePriority = matcher;
            }

            return _matcherNetworkUpdatePriority;
        }
    }
}
